/********************************************************************** 
       DAX measures
***********************************************************************/



//--------------------------------------------------------------------
//     DisplayQTD_AtMaxMonthOnly
//-------------------------------------------------------------------- 

DisplayQTD_AtMaxMonthOnly:=COUNTROWS (
//When this measure is false the QTD P&L is displayed for each month of qtr despite the fact that it is not the last month displayed in the qtr
    CALCULATETABLE (
        PandL_DisplayBehaviour,
        KEEPFILTERS ( PandL_DisplayBehaviour[DisplayBehaviour] = "Display QTD at max month for qtr displayed only" )
    )
) = 1


//--------------------------------------------------------------------
//     DisplayQTD_AtNonQtrEnd
//-------------------------------------------------------------------- 

DisplayQTD_AtNonQtrEnd:=COUNTROWS (
//When this measure is false, the QTD P&L is only displayed at a qtr end, even if month end is the max month displayed for  given qtr
    CALCULATETABLE (
        PandL_DisplayBehaviour,
        KEEPFILTERS ( PandL_DisplayBehaviour[DisplayBehaviour] = "Display QTD at non-qtr end point" )
    )
) = 1


//--------------------------------------------------------------------
//     DisplayYTD_AtMaxMonthOnly
//-------------------------------------------------------------------- 

DisplayYTD_AtMaxMonthOnly:=COUNTROWS (
//When this measure is false the YTD P&L is displayed for each month of year despite the fact that it is not the last month displayed in the year
    CALCULATETABLE (
        PandL_DisplayBehaviour,
        KEEPFILTERS ( PandL_DisplayBehaviour[DisplayBehaviour] = "Display YTD for max month of year displayed only" )
    )
) = 1


//--------------------------------------------------------------------
//     DisplayYTD_AtNonYearEnd
//-------------------------------------------------------------------- 

DisplayYTD_AtNonYearEnd:=COUNTROWS (
//When this measure is false, the YTD P&L is only displayed at a year end, even if month end is the max month displayed for  given year
    CALCULATETABLE (
        PandL_DisplayBehaviour,
        KEEPFILTERS ( PandL_DisplayBehaviour[DisplayBehaviour] = "Display YTD at non-year end point" )
    )
) = 1


//--------------------------------------------------------------------
//     EXAMPLE Check items in data table not in lookup table
//-------------------------------------------------------------------- 

EXAMPLE Check items in data table not in lookup table:=VAR _MissingItems = 
    EXCEPT(VALUES(Example_DataTable[Foreign Key]), VALUES(Example_LookupTable[Primary Key]))
    
VAR _ReturnValue = 
    IF(
        ISBLANK(COUNTROWS(_MissingItems)),
        1,
        0
      )
      
RETURN
    _ReturnValue


//--------------------------------------------------------------------
//     EXAMPLE Check list items in data table not in lookup table
//-------------------------------------------------------------------- 

EXAMPLE Check list items in data table not in lookup table:=VAR _MissingItems = 
    EXCEPT(VALUES(Example_DataTable[Foreign Key]), VALUES(Example_LookupTable[Primary Key]))

VAR _ReturnValue = 
    CONCATENATEX(_MissingItems, Example_DataTable[Foreign Key], "|")
    
RETURN
    _ReturnValue


//--------------------------------------------------------------------
//     FinancialDataGranularitySelectedForPandL
//-------------------------------------------------------------------- 

FinancialDataGranularitySelectedForPandL:=IF(
    HASONEVALUE(FinancialDataGranularity[Granularity]),
    VALUES(FinancialDataGranularity[Granularity]),
    "Account level")


//--------------------------------------------------------------------
//     FinancialDataGranularitySelectedForTb
//-------------------------------------------------------------------- 

FinancialDataGranularitySelectedForTb:=IF(
    HASONEVALUE(FinancialDataGranularity[Granularity]),
    VALUES(FinancialDataGranularity[Granularity]),
    "Account level")


//--------------------------------------------------------------------
//     Journals
//-------------------------------------------------------------------- 

Journals:=SUM(Example_Jnls[Jnl Amount]) / [NumberScaleAdj]


//--------------------------------------------------------------------
//     MaxAllSelectedDates
//-------------------------------------------------------------------- 

MaxAllSelectedDates:=CALCULATE(
        MAX(DateTable[Date]),
        ALLSELECTED(DateTable)
    )


//--------------------------------------------------------------------
//     MaxAllSelectedDatesInCurrentQtr
//-------------------------------------------------------------------- 

MaxAllSelectedDatesInCurrentQtr:=VAR _Qtr = 
   VALUES(DateTable[QuarterInCalendar])

RETURN
IF(
    HASONEVALUE(DateTable[QuarterInCalendar]), 
    CALCULATE(
            MAX(DateTable[Date]),
            ALLSELECTED(DateTable),
            DateTable[QuarterInCalendar] = _Qtr
    )
)


//--------------------------------------------------------------------
//     MaxAllSelectedDatesInCurrentYear
//-------------------------------------------------------------------- 

MaxAllSelectedDatesInCurrentYear:=VAR _Year = 
   VALUES(DateTable[Year])

RETURN
IF(
    HASONEVALUE(DateTable[Year]), 
    CALCULATE(
            MAX(DateTable[Date]),
            ALLSELECTED(DateTable),
            DateTable[Year] = _Year
    )
)


//--------------------------------------------------------------------
//     NumberScaleAdj
//-------------------------------------------------------------------- 

NumberScaleAdj:=IF(
    HASONEVALUE(NumberScale[ShowValuesAs]),
    VALUES(NumberScale[DivideBy]),
    1)


//--------------------------------------------------------------------
//     OkToDisplayPandL
//-------------------------------------------------------------------- 

OkToDisplayPandL:=VAR _NoGapsInDateRange = 
    COUNT(DateTable[Date]) = (MAX(DateTable[Date]) - MIN(DateTable[Date]) +1)

VAR _TbExistsForMonth = 
    NOT(ISEMPTY(VALUES(Example_TB[EndOfMonth])))
    
VAR _ReturnValue = 
    _NoGapsInDateRange && _TbExistsForMonth

RETURN 
    _ReturnValue


//--------------------------------------------------------------------
//     OkToDisplayPandL_MTD
//-------------------------------------------------------------------- 

OkToDisplayPandL_MTD:=[OkToDisplayPandL] && 
    HASONEVALUE(DateTable[EndOfMonth])


//--------------------------------------------------------------------
//     OkToDisplayPandL_PY
//-------------------------------------------------------------------- 

OkToDisplayPandL_PY:=[OkToDisplayPandL_YTD] &&
    CALCULATE(
        COUNTROWS(VALUES(Example_TB[EndOfMonth])),
        PREVIOUSYEAR(DateTable[Date])
    ) <>  0


//--------------------------------------------------------------------
//     OkToDisplayPandL_QTD
//-------------------------------------------------------------------- 

OkToDisplayPandL_QTD:=SWITCH(
    TRUE,
    NOT([OkToDisplayPandL]), FALSE(), 
    NOT(HASONEVALUE (DateTable[EndOfQtr])), FALSE(), 
    MAX (DateTable[Date]) = VALUES(DateTable[EndOfQtr]), TRUE() ,      //Date is the last day of the quarter
    MAX ( DateTable[Date] ) = [MaxAllSelectedDatesInCurrentQtr]  && [DisplayQTD_AtNonQtrEnd], TRUE(),    //Date is the last date selected for qtr end and measure DisplayQTD_AtNonQtrEnd is TRUE
    HASONEVALUE ( DateTable[EndOfMonth] ) && NOT ([DisplayQTD_AtMaxMonthOnly]),  TRUE(),        //Single end of month context exists and measure DisplayQTD_AtMaxMonthOnly is FALSE
    FALSE()
    )


//--------------------------------------------------------------------
//     OkToDisplayPandL_YTD
//-------------------------------------------------------------------- 

OkToDisplayPandL_YTD:=SWITCH(
    TRUE,
    NOT([OkToDisplayPandL]), FALSE(), 
    NOT(HASONEVALUE (DateTable[Year])), FALSE(), 
    MAX (DateTable[Date]) = VALUES(DateTable[EndOfYear]), TRUE() ,      //Date is the last day of the year
    MAX ( DateTable[Date] ) = [MaxAllSelectedDatesInCurrentYear]  && [DisplayYTD_AtNonYearEnd], TRUE(),    //Date is the last date selected for year end and measure DisplayYTD_AtNonYearEnd is TRUE
    HASONEVALUE ( DateTable[EndOfMonth] ) && NOT ([DisplayYTD_AtMaxMonthOnly]),  TRUE(),        //Single end of month context exists and measure DisplayYTD_AtMaxMonthOnly is FALSE
    FALSE()
    )


//--------------------------------------------------------------------
//     P&L Account Level
//-------------------------------------------------------------------- 

P&L Account Level:=VAR _LastDateSelected = 
    MAX(DateTable[Date])

VAR _PandL_YTD =  CALCULATE(
        -[TB],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss"),
        DateTable[Date] = _LastDateSelected
    )

VAR _PandL_QTD =  BLANK()

VAR _PandL_MTD = BLANK()

VAR _PandL_PY = BLANK()
        
RETURN
    SWITCH(
        TRUE(),
        [TimePeriodForPandL] = "YTD" && [OkToDisplayPandL_YTD],  _PandL_YTD,
        [TimePeriodForPandL] = "QTD" && [OkToDisplayPandL_QTD], _PandL_QTD,
        [TimePeriodForPandL] = "MTD" && [OkToDisplayPandL_MTD], _PandL_MTD,
        [TimePeriodForPandL] = "PY" && [OkToDisplayPandL_PY], _PandL_PY
        )


//--------------------------------------------------------------------
//     P&L Journal Level
//-------------------------------------------------------------------- 

P&L Journal Level:=VAR _PandL_YTD =  CALCULATE(
        -[Journals],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss"),
        DATESYTD(DateTable[Date]))

VAR _PandL_QTD =  CALCULATE(
        -[Journals],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss"),
        DATESQTD(DateTable[Date]))

VAR _PandL_MTD = CALCULATE(
        -[Journals],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss"),
        DATESMTD(DateTable[Date]))

VAR _PandL_PY = CALCULATE(
        -[Journals],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss"),
        PREVIOUSYEAR(DateTable[Date]))
        
RETURN
    SWITCH(
        TRUE(),
        [TimePeriodForPandL] = "YTD" && [OkToDisplayPandL_YTD],  _PandL_YTD,
        [TimePeriodForPandL] = "QTD" && [OkToDisplayPandL_QTD], _PandL_QTD,
        [TimePeriodForPandL] = "MTD" && [OkToDisplayPandL_MTD], _PandL_MTD,
        [TimePeriodForPandL] = "PY" && [OkToDisplayPandL_PY], _PandL_PY
        )


//--------------------------------------------------------------------
//     P&L
//-------------------------------------------------------------------- 

P&L:=SWITCH (
    [FinancialDataGranularitySelectedForPandL],
    "Account level", [P&L Account Level],
    "Journal level", [P&L Journal Level]
)


//--------------------------------------------------------------------
//     RestrictHierarchyLevels
//-------------------------------------------------------------------- 

RestrictHierarchyLevels:=COUNTROWS (
//Normally P&L display is restricted to certail levels depending on account.  If this measure is FALSE the restriction is removed
    CALCULATETABLE (
        PandL_DisplayBehaviour,
        KEEPFILTERS ( PandL_DisplayBehaviour[DisplayBehaviour] = "Restrict hierarchy levels" )
    )
) = 1


//--------------------------------------------------------------------
//     TB
//-------------------------------------------------------------------- 

TB:=VAR _OkToDisplayTB=
    HASONEVALUE(DateTable[EndOfMonth]) && 
    [TimePeriodForTb] = "YTD" && 
    [FinancialDataGranularitySelectedForTb] = "Account level"
    
RETURN
    IF(
        _OkToDisplayTB, 
        SUM(Example_TB[Amount])
        ) / [NumberScaleAdj]


//--------------------------------------------------------------------
//     TimePeriodForPandL
//-------------------------------------------------------------------- 

TimePeriodForPandL:=IF(
    HASONEVALUE(TimePeriods[Time Period]),
    VALUES(TimePeriods[Time Period]),
    "MTD"
    )


//--------------------------------------------------------------------
//     TimePeriodForTb
//-------------------------------------------------------------------- 

TimePeriodForTb:=IF(
    HASONEVALUE(TimePeriods[Time Period]),
    VALUES(TimePeriods[Time Period]),
    "YTD"
    )